name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GRADLE_VERSION: 8.2
      ANDROID_SDK_VERSION: "34"
      API_LEVEL: 34
      BUILD_TOOLS_VERSION: "34.0.0"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Gradle
      run: |
        wget https://services.gradle.org/distributions/gradle-8.2-bin.zip
        unzip gradle-8.2-bin.zip
        export PATH=$PATH:$PWD/gradle-8.2/bin

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: ${{ env.API_LEVEL }}
        build-tools: ${{ env.BUILD_TOOLS_VERSION }}
        ndk: true

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}

    - name: Download dependencies
      run: gradle build --no-daemon

    - name: Build with Gradle
      run: gradle assembleDebug

    - name: Run unit tests
      run: gradle testDebugUnitTest

    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: AVD cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: gradle-${{ runner.os }}

    - name: create AVD and generate snapshot for caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
         api-level: 34
         force-avd-creation: false
         emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
         disable-animations: false
         script: echo "Generated AVD snapshot for caching."


    - name: Run the emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 34
        target: default
        arch: x86_64
        profile: Nexus 6
        emulator-options: -no-window -no-audio -no-boot-anim -no-snapshot-save -gpu
        emulator-boot-timeout: 600
        force-avd-creation: false
        script: ./gradlew connectedCheck

    - name: Archive build outputs
      if: failure() # Only archive if the build fails
      uses: actions/upload-artifact@v3
      with:
        name: build-outputs
        path: |
          app/build/outputs/mapping/release/missing_rules.txt
          app/build/intermediates/lint_intermediate_text_report/debug/lint-results-debug.txt
